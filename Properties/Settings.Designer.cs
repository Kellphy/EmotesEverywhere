//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KEE.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.7.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color Color_BG {
            get {
                return ((global::System.Drawing.Color)(this["Color_BG"]));
            }
            set {
                this["Color_BG"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color Button_BG {
            get {
                return ((global::System.Drawing.Color)(this["Button_BG"]));
            }
            set {
                this["Button_BG"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color Color_FG {
            get {
                return ((global::System.Drawing.Color)(this["Color_FG"]));
            }
            set {
                this["Color_FG"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color Color_NonText {
            get {
                return ((global::System.Drawing.Color)(this["Color_NonText"]));
            }
            set {
                this["Color_NonText"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color TextBox_BG {
            get {
                return ((global::System.Drawing.Color)(this["TextBox_BG"]));
            }
            set {
                this["TextBox_BG"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color Color_Link {
            get {
                return ((global::System.Drawing.Color)(this["Color_Link"]));
            }
            set {
                this["Color_Link"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color Color_VLink {
            get {
                return ((global::System.Drawing.Color)(this["Color_VLink"]));
            }
            set {
                this["Color_VLink"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color Error {
            get {
                return ((global::System.Drawing.Color)(this["Error"]));
            }
            set {
                this["Error"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color Copy {
            get {
                return ((global::System.Drawing.Color)(this["Copy"]));
            }
            set {
                this["Copy"] = value;
            }
        }
    }
}
